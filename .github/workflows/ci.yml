name: Continuous builds

on:
  push:
    branches: [ main, development, experimental, test* ]
  pull_request:
    branches: [ main, development, experimental, test* ]

jobs:

  pre-commit:
    name: Format
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - uses: actions/setup-python@v2
    - uses: pre-commit/action@v2.0.0
      with:
        extra_args: --hook-stage manual --all-files

  build:
    name: Build for Python ${{ matrix.python-version }} on ${{ matrix.runs-on }}
    runs-on: ${{ matrix.runs-on }}
    strategy:
      fail-fast: false
      matrix:
        python-version: [ "3.7", "3.8", "3.9", "3.10"]
        runs-on: [ubuntu-latest, macos-latest, windows-latest]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python  ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version:  ${{ matrix.python-version }}

    - name: Install package
      run: |
        python -m pip install --upgrade pip
        pip install .[dev]

    - name: Lint with flake8
      run: |
        flake8 . --count --exit-zero --show-source --max-line-length=127 --statistics

    - name: List packages so far
      run: |
        pip list

    - name: Run some examples
      run: |
        cd examples
        python document.py

        cd test
        python test.py

        ## Test NeuroML example

        cd ../neuroml2
        python neuroml2_spec.py

        pip install pyneuroml

        # Requires: pip install pyneuroml
        pynml -validate hello_world_neuroml.net.nml
        pynml -validate TestNeuroML.xml

    - name: Run pytest
      run: |
        pytest tests

    - name: Install & test NeuroMLlite
      run: |
          git clone --branch development https://github.com/NeuroML/NeuroMLlite.git
          cd NeuroMLlite
          #pip install . # Use versions of neuroml libs as set in setup.py
          cd examples
          python Example1.py


    - name: Install MDF
      run: |

          git clone --branch development https://github.com/ModECI/MDF.git
          cd MDF
          pip install .
          cd examples/MDF
          python arrays.py -run   # test one example

    - name: Build Documentation
      run: |

        pip install .[docs]
        cd docs
        python generate.py
        python contributors.py
        cd sphinx
        make clean
        make html

    - name: Final version info
      run: |
          pip list
          env
